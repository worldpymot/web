{"version":3,"sources":["components/Header.js","components/Message.js","components/MessageList.js","components/MessageBox.js","components/RegistrationForm.js","components/User.js","components/UserList.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","this","props","title","Component","Message","message","MessageList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","messages","db","database","ref","on","snapshot","getData","val","values","messagesVal","_","keys","map","messageKey","cloned","clone","key","value","setState","messageNodes","components_Message","id","MessageBox","onChange","bind","assertThisInitialized","onKeyup","e","target","keyCode","trim","preventDefault","dbCon","push","htmlFor","rows","placeholder","onKeyUp","RegistrationForm","handleChange","event","_this$setState","type","checked","name","defineProperty","handleSubmit","console","log","JSON","stringify","email","password","hobby_one","hobby_two","gender","fruit","onSubmit","disabled","multiple","User","deleteUser","firebase","child","remove","_this2","perticularuser","onClick","UserList","gotData","data","getallData","errData","err","users","usersVal","userKey","userdispList","myuser","components_User","userKeyTapas","App","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","lavender","backgroundColor","style","components_Header","components_RegistrationForm","components_UserList","marginTop","components_MessageBox","components_MessageList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a94b227e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Header extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <nav>\r\n                <div className=\"navbar-brand\">\r\n                    <a className=\"navbar-item\" href=\"http://bulma.io\">\r\n                        {this.props.title}\r\n                    </a>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Header;","// Message.js\r\n\r\nimport React, {Component} from 'react';\r\n\r\nclass Message extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.props.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Message;","// MessageList.js\r\nimport React, {Component} from 'react';\r\n\r\nimport Message from './Message';\r\nimport _ from 'lodash';\r\n\r\nclass MessageList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state  = {\r\n            messages: []\r\n        };\r\n        let app = this.props.db.database().ref('messages');\r\n        app.on('value', snapshot => {\r\n            this.getData(snapshot.val());\r\n        });\r\n    }\r\n\r\n    getData(values){\r\n        let messagesVal = values;\r\n        let messages = _(messagesVal)\r\n            .keys()\r\n            .map(messageKey => {\r\n                let cloned = _.clone(messagesVal[messageKey]);\r\n                cloned.key = messageKey;\r\n                return cloned;\r\n            })\r\n        .value();\r\n        this.setState({\r\n            messages: messages\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        let messageNodes = this.state.messages.map((message) => {\r\n            return (\r\n                <Message key={message.id} message = {message.message} />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {messageNodes}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList;","// MessageBox.js\r\n\r\nimport React, {Component} from 'react';\r\nimport trim from 'trim';\r\n\r\nclass MessageBox extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onKeyup = this.onKeyup.bind(this);\r\n        this.state = {\r\n            message: ''\r\n        };\r\n    }\r\n    onChange(e){\r\n        this.setState({\r\n            message: e.target.value\r\n        });\r\n    }\r\n    onKeyup(e){\r\n        if(e.keyCode === 13 && trim(e.target.value) !== ''){\r\n            e.preventDefault();\r\n            let dbCon = this.props.db.database().ref('/messages');\r\n            dbCon.push({\r\n                id: dbCon.push().key,\r\n                message: trim(e.target.value)\r\n            });\r\n            this.setState({\r\n                message: ''\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"comment\">Message:</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Type a message\"\r\n                        onChange={this.onChange}\r\n                        onKeyUp={this.onKeyup}\r\n                        value={this.state.message}>\r\n                    </textarea>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageBox;","import React, {Component} from 'react';\r\n\r\nclass RegistrationForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        // this.handleChange = this.handleChange.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            email: 'tapas@gmail.com',\r\n            password: '123456',\r\n            hobby_one: false,\r\n            hobby_two: false,\r\n            gender: false,\r\n            fruit: ''\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value,\r\n            fruit: event.target.value\r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        console.log('A name was submitted: ' + JSON.stringify(this.state));\r\n        // console.log('Radio: ' + JSON.stringify(this.state.gender));\r\n        // alert('Your favorite flavor is: ' + this.state.fruit);\r\n\r\n        event.preventDefault();\r\n\r\n        let dbCon = this.props.db.database().ref('/users');\r\n        dbCon.push({\r\n            id: dbCon.push().key,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            hobby_one: this.state.hobby_one,\r\n            hobby_two: this.state.hobby_two,\r\n            gender: this.state.gender,\r\n            fruit: this.state.fruit\r\n        });\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n            hobby_one: false,\r\n            hobby_two: false,\r\n            gender: false,\r\n            fruit: ''\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email address: {this.state.fruit}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"pwd\">Password:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"password\"\r\n                        className=\"form-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group form-check-inline\">\r\n                    <label className=\"form-check-label\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            name=\"hobby_one\"\r\n                            type=\"checkbox\"\r\n                            checked={this.state.hobby_one}\r\n                            onChange={this.handleChange}\r\n                        />  Movie\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group form-check-inline\">\r\n                    <label className=\"form-check-label\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            name=\"hobby_two\"\r\n                            type=\"checkbox\"\r\n                            checked={this.state.hobby_two}\r\n                            onChange={this.handleChange}\r\n                        />  Sport\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"form-check-input\"\r\n                                name=\"gender\"\r\n                                value=\"Male\"\r\n                                checked={this.state.gender === 'Male'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            Male\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"form-check-input\"\r\n                                name=\"gender\"\r\n                                value=\"Female\"\r\n                                checked={this.state.gender === 'Female'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            Female\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-check disabled form-check-inline\">\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"form-check-input\"\r\n                                name=\"gender\"\r\n                                value=\"Other\"\r\n                                checked={this.state.gender === 'Other'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            Other\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-check disabled form-check-inline\">\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"form-check-input\"\r\n                                name=\"gender\"\r\n                                disabled\r\n                            />\r\n                            Option 3\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"sel1\">Select list:</label>\r\n                    <select multiple className=\"form-control\" value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"\">Select Fruit</option>\r\n                        <option value=\"apple\">Apple</option>\r\n                        <option value=\"banana\">Banana</option>\r\n                        <option value=\"cranberry\">Cranberry</option>\r\n                    </select>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\">\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default RegistrationForm;","// User.js\r\n\r\nimport React, {Component} from 'react';\r\n\r\nimport firebase from 'firebase';\r\n\r\nclass User extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    deleteUser = (key) => {\r\n        // e.preventDefault();\r\n        // var myRef = firebase.database().ref('/users').push();\r\n        // var myRef = firebase.database().ref('/users').child('posts').push().key;\r\n        // DELECT FROM DATABASE\r\n        //var ref = firebase.database().ref('users').child('-LPKbtxhvyB7gQ2iMLcf');\r\n        // ref.remove();\r\n        // console.log('delete user');\r\n\r\n        // GET DATA KEY\r\n        /*var database = firebase.database();\r\n        var ref = database.ref('users');\r\n        ref.on('value', this.gotData, this.errData);*/\r\n\r\n        var removeUser = firebase.database().ref('users').child(key);\r\n        removeUser.remove();\r\n\r\n    }\r\n    /*gotData = (data) => {\r\n        var gotdataID = data.val();\r\n        console.log('got', gotdataID);\r\n    }\r\n    errData = (err) => {\r\n        console.log(err);\r\n    }*/\r\n\r\n    render(){\r\n\r\n        return (\r\n                [\r\n                    <tbody key={this.props.perticularuser.id}>\r\n                        <tr>\r\n                            <td>{this.props.perticularuser.email}</td>\r\n                            <td>{this.props.perticularuser.password}</td>\r\n                            <td>{this.props.perticularuser.hobby_one === true ? 'Movie' : ''} {this.props.perticularuser.hobby_two === true ? 'Sport' : ''}</td>\r\n                            <td>{this.props.perticularuser.gender}</td>\r\n                            <td>{this.props.perticularuser.fruit}</td>\r\n                            <td>\r\n                                <span className=\"btn btn-primary btn-sm\">Edit</span>\r\n                                <span className=\"btn btn-danger btn-sm\" onClick={() => this.deleteUser(this.props.perticularuser.key)}>Delete</span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                ]\r\n           )\r\n\r\n    }\r\n}\r\nexport default User;","// MessageList.js\r\nimport React, {Component} from 'react';\r\n\r\nimport User from './User';\r\nimport _ from 'lodash';\r\n\r\nclass UserList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state  = {\r\n            users: []\r\n        };\r\n\r\n\r\n        // GOT DATA KEY BY ME (FOR TESTING )\r\n        var database = this.props.db.database();\r\n        var setref = database.ref('users');\r\n        setref.on('value', this.gotData, this.errData);\r\n        // End GOT DATA KEY\r\n\r\n\r\n        let app = this.props.db.database().ref('users');\r\n        app.on('value', (snapshot) => {\r\n            this.getData(snapshot.val());\r\n            console.log('SNAPSHOT', snapshot.val());\r\n        });\r\n\r\n\r\n    }\r\n\r\n    // GOT DATA KEY BY ME (FOR TESTING )\r\n    gotData = (data) => {\r\n        var getallData = data.val();\r\n        console.log('UserList', getallData);\r\n        // var getonlyKeys = Object.keys(getallData);\r\n        // console.log('Only Key', getonlyKeys);\r\n    }\r\n    errData = (err) => {\r\n        console.log(err);\r\n    }\r\n    // END -- GOT DATA KEY BY ME (FOR TESTING )\r\n\r\n    getData(values){\r\n        let usersVal = values;\r\n        // let objectKey = Object.keys(values);\r\n        let users = _(usersVal)\r\n            .keys()\r\n            .map(userKey => {\r\n                let cloned = _.clone(usersVal[userKey]);\r\n                cloned.key = userKey;\r\n                return cloned;\r\n            })\r\n            .value();\r\n\r\n            this.setState({\r\n                users: users\r\n            });\r\n            console.log('TAPAS =>>>', 'objectKey now off getting error' , 'NEXT TAPAS =>>', users);\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let userdispList = this.state.users.map((myuser) => {\r\n            return (\r\n                <User key={myuser.id} perticularuser = {myuser} userKeyTapas = {myuser.key} />\r\n            )\r\n        });\r\n\r\n        return (\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Email</th>\r\n                        <th>Password</th>\r\n                        <th>Hobby</th>\r\n                        <th>Gender</th>\r\n                        <th>Fruit</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    {userdispList}\r\n\r\n                </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","import React, { Component } from 'react';\n\nimport Header from './components/Header';\nimport MessageList from './components/MessageList';\nimport MessageBox from './components/MessageBox';\n\n// import FormTesting from './components/FormTesting';\n\nimport RegistrationForm from './components/RegistrationForm';\nimport UserList from './components/UserList';\n\nimport firebase from 'firebase';\n\n// import logo from './logo.svg';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        const config = {\n            apiKey: process.env.REACT_APP_FIREBASE_KEY,\n            authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n            databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n            projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n            storageBucket: process.env.REACT_APP_FIREBASE_BUCKET,\n            messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n        };\n        firebase.initializeApp(config);\n    }\n\n  render() {\n     /* var purpleBorder = {\n          border: '2px solid red',\n          margin:'15px'\n      };*/\n      var lavender = {\n          backgroundColor: 'lavender'\n      };\n      var orange = {\n          backgroundColor: 'orange'\n      };\n      var yellow = {\n          backgroundColor: 'yellow'\n      };\n      var martop15 = {\n          marginTop: '15px'\n      };\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\" style={lavender}>\n                    <Header title=\"Data App\" />\n                </div>\n            </div>\n\n            <div className=\"row d-flex justify-content-center\">\n                <div className=\"col-4\">\n                    <p>Registration Form</p>\n                    <div>\n                        <RegistrationForm  db={firebase} />\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <p>Registered Users List</p>\n                    <div>\n                        <UserList db={firebase} />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"row d-flex justify-content-center\" style={martop15}>\n                <div className=\"col\" style={lavender}>\n                    <div>\n                        <MessageBox db={firebase} />\n                    </div>\n                </div>\n                <div className=\"col\" style={orange}>\n                    <div>\n                        <MessageList db={firebase} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}